"""Add password to verifiers table

Revision ID: 52fb60095da6
Revises: 8f72a3cef9e6
Create Date: 2025-07-28 11:01:17.822004

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '52fb60095da6'
down_revision: Union[str, Sequence[str], None] = '8f72a3cef9e6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - adjusted! ###
    
    # Step 1: Add the new column, but allow it to be NULL for now.
    op.add_column('verifiers', sa.Column('hashed_password', sa.String(), nullable=True))
    
    # Step 2: Create a placeholder hashed password.
    # We need a password to fill in for the existing rows.
    # Let's use "changeme" as the default password.
    from passlib.context import CryptContext
    pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")
    placeholder_hash = pwd_context.hash("changeme")

    # Update all existing rows to have this placeholder password.
    op.execute(f"UPDATE verifiers SET hashed_password = '{placeholder_hash}' WHERE hashed_password IS NULL")

    # Step 3: Now that all rows have a value, alter the column to be NOT NULL.
    op.alter_column('verifiers', 'hashed_password', nullable=False)

    # ### end Alembic commands ###

def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('verifiers', 'hashed_password')
    # ### end Alembic commands ###
